/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.FuncionarioController;
import Model.Funcionario;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author Dcxz
 */
public class TelaManterFuncionario extends javax.swing.JFrame {
 FuncionarioController controller;
 int idUs;   
 /**
     * Creates new form TelaMenu
     */
    public TelaManterFuncionario(int id) {
        initComponents();
        campoNome.requestFocus();
        idUs=id;
         invisibleOrVisible(false);
        controller = new FuncionarioController();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTitulo = new javax.swing.JLabel();
        txtNome = new javax.swing.JLabel();
        campoNome = new javax.swing.JTextField();
        txtCPF = new javax.swing.JLabel();
        campoCPF = new javax.swing.JTextField();
        txtSenha = new javax.swing.JLabel();
        campoSenha = new javax.swing.JPasswordField();
        txtConfirmarSenha = new javax.swing.JLabel();
        campoConfirmarSenha = new javax.swing.JPasswordField();
        btCadastrar2 = new javax.swing.JButton();
        txtMe = new javax.swing.JLabel();
        btEditar = new javax.swing.JButton();
        btBuscar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        txtID = new javax.swing.JLabel();
        campoID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtTitulo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTitulo.setText("Funcionario");

        txtNome.setText("Nome");

        txtCPF.setText("CPF");

        txtSenha.setText("Senha");

        txtConfirmarSenha.setText("Confirmar Senha");

        btCadastrar2.setText("Cadastrar");
        btCadastrar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastrar2ActionPerformed(evt);
            }
        });

        txtMe.setForeground(new java.awt.Color(255, 0, 0));

        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btVoltar.setText("Voltar");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        txtID.setText("ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btCadastrar2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtMe, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 33, Short.MAX_VALUE)
                                .addComponent(btEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtNome)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtConfirmarSenha)
                                    .addComponent(txtCPF)
                                    .addComponent(campoNome)
                                    .addComponent(campoCPF)
                                    .addComponent(txtSenha)
                                    .addComponent(campoSenha)
                                    .addComponent(campoConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(txtTitulo))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID)
                            .addComponent(campoID, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(txtNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCPF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtConfirmarSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMe, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCadastrar2)
                    .addComponent(btEditar)
                    .addComponent(btBuscar)
                    .addComponent(btExcluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btVoltar)
                    .addComponent(btLimpar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCadastrar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastrar2ActionPerformed
        aviso();
         String senha = String.valueOf(campoSenha.getPassword());
          String confirmarSenha = String.valueOf(campoConfirmarSenha.getPassword());
        if(senha.length()>0 && campoNome.getText().length()>0 && campoCPF.getText().length()>0&& confirmarSenha.length()>0){
           if(senha.equals(confirmarSenha)){
            Funcionario c = capturarFuncionario();
            if(c!=null){
                controller.Cadastrar(c);
                menssagemCerta("Cadastrado com sucesso");
            }else txtMe.setText("Cadastrado com erro!");
           }else txtMe.setText("Senhas não estão iguais");
        }else txtMe.setText("Campo vazio!");
    }//GEN-LAST:event_btCadastrar2ActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
       String senha = String.valueOf(campoSenha.getPassword());
          String confirmarSenha = String.valueOf(campoConfirmarSenha.getPassword());
        if(senha.length()>0 && campoNome.getText().length()>0 && campoCPF.getText().length()>0&& confirmarSenha.length()>0){
             if(senha.equals(confirmarSenha)){
            Funcionario c = capturarFuncionario();
            if(c!=null){
                controller.atualizarFuncionario(c);
                menssagemCerta("Atualizado com sucesso");
            }else txtMe.setText("Atualizado com erro!");
             }else txtMe.setText("Senhas não estão iguais");
        }else txtMe.setText("Campo vazio!");
    }//GEN-LAST:event_btEditarActionPerformed

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        if(campoID.getText().length()>0){
             String senha = String.valueOf(campoSenha.getPassword());
          String confirmarSenha = String.valueOf(campoConfirmarSenha.getPassword());
            if(senha.equals(confirmarSenha)){
            Funcionario c = controller.buscaID(Integer.parseInt(campoID.getText()));
            if(c!=null){
                preencherFuncionario(c);
                invisibleOrVisible(true);
            }else txtMe.setText("Funcionario não encontrado!");
             }else txtMe.setText("Senhas não estão iguais");
        }else txtMe.setText("Campo vazio!");
    }//GEN-LAST:event_btBuscarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        if(campoID.getText().length()>0){
            Funcionario c = controller.buscaID(Integer.parseInt(campoID.getText()));
            if(c!=null){
                controller.excluirFuncionario(Integer.parseInt(campoID.getText()));
                limpar();
                menssagemCerta("Deletado com sucesso");
            }else txtMe.setText("Funcionario não encontrado!");
        }else txtMe.setText("Campo vazio!");
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        limpar();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
       mostrarTelaListaFuncionario();
    }//GEN-LAST:event_btVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaManterFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaManterFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaManterFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaManterFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaManterFuncionario(0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btCadastrar;
    private javax.swing.JButton btCadastrar1;
    private javax.swing.JButton btCadastrar2;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btVoltar;
    private javax.swing.JTextField campoCPF;
    private javax.swing.JPasswordField campoConfirmarSenha;
    private javax.swing.JTextField campoID;
    private javax.swing.JTextField campoNome;
    private javax.swing.JPasswordField campoSenha;
    private javax.swing.JLabel txtCPF;
    private javax.swing.JLabel txtConfirmarSenha;
    private javax.swing.JLabel txtID;
    private javax.swing.JLabel txtMe;
    private javax.swing.JLabel txtNome;
    private javax.swing.JLabel txtSenha;
    private javax.swing.JLabel txtTitulo;
    // End of variables declaration//GEN-END:variables
public Funcionario capturarFuncionario(){
   int id=0;
    if(campoID.getText().length()>0){
     id = Integer.parseInt(campoID.getText());
    }
    String senha = String.valueOf(campoSenha.getPassword());
    String nome= campoNome.getText();
    String cpf= campoCPF.getText();
    Funcionario c = new Funcionario(id, nome, cpf, senha);
    return c;
}
public void menssagemCerta(String x){
    txtMe.setText(x);
    txtMe.setForeground(Color.BLUE);
}
public void invisibleOrVisible(boolean x){
    btEditar.setVisible(x);
    btExcluir.setVisible(x);
}
private void preencherFuncionario(Funcionario c){
    campoSenha.setText(c.getSenha());
    campoID.setText(""+c.getId());
    campoNome.setText(""+c.getNome());
    campoCPF.setText(""+c.getCpf());
    
}
public void limpar(){
    campoSenha.setText("");
    campoID.setText("");
    campoNome.setText("");
    campoCPF.setText("");
    campoConfirmarSenha.setText("");
    txtMe.setText("");
}
 public void aviso() {
                int i = JOptionPane.showConfirmDialog(null, "Para o cadastro, o campo de código estara indisponivel",
                                                      "Aviso", JOptionPane.CLOSED_OPTION);
                     repaint();
                }
 public  void mostrarTelaListaFuncionario(){
         TelaListaFuncionario tl = new TelaListaFuncionario(idUs);
        tl.setResizable(false);
        tl.setTitle("Funcionário");
        tl.setLocationRelativeTo(null);
        tl.setVisible(true);
        tl.setVisible(true);
	this.setVisible(false);
    }
}
